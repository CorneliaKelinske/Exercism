1. Get all the products within the range:
add them to a dictionary
not a dictionary comprehension, because it will have to be a bit more complicated:
    product is the key, if key is already in dict, I need to append the factors.
    -> dict values must be lists with tuples
then, i can check which keys are palindromes (if their reversed string is identical to their string form), 
keep them by way of dict comprehension?
then, eliminate duplicates in the factors... maybe by ordering them by value????
And then check for the smallest or largest palindrome


31 December:
I am getting the palindromes.
Now I need to get the greatest for now.
Look it up in the dictionary and get all factors, however, I need to eliminate duplicates.
Next step:
need to delete duplicates from my list of factors

2 January:
I am getting what I am supposed to get.
next steps:
run tests for largest 
copy code and adapt for smallest
make prettier

4 January:
had to fix slicing
2 tests pass; 
moving forward:
make other tests pass as well
then see 2 January

6 January:
memory error for 4-digit numbers
idea: only store palindrome products and their factors in the products dictionary ==> less memory required

